apiVersion: apps/v1
kind: Deployment
metadata:
  name: whatsapp-rag
  namespace: default
  labels:
    app: whatsapp-rag
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: whatsapp-rag
  template:
    metadata:
      labels:
        app: whatsapp-rag
        version: v1.0.0
    spec:
      containers:
      - name: whatsapp-rag
        image: whatsapp-rag:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 7860
          protocol: TCP
        env:
        - name: GRADIO_SERVER_NAME
          value: "0.0.0.0"
        - name: GRADIO_SERVER_PORT
          value: "7860"
        - name: OPENAI_API_BASE
          value: "https://models.inference.ai.azure.com"
        - name: MODEL_NAME
          value: "gpt-4o-mini"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: whatsapp-rag-secrets
              key: openai-api-key
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: whatsapp-rag-secrets
              key: github-token
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 7860
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 7860
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /home/app/data
          readOnly: true
        - name: logs-volume
          mountPath: /home/app/logs
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: whatsapp-data-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: whatsapp-logs-pvc
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: whatsapp-rag-service
  namespace: default
  labels:
    app: whatsapp-rag
spec:
  selector:
    app: whatsapp-rag
  ports:
  - name: http
    port: 80
    targetPort: 7860
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: whatsapp-rag-secrets
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded tokens
  openai-api-key: REPLACE_WITH_BASE64_ENCODED_TOKEN
  github-token: REPLACE_WITH_BASE64_ENCODED_TOKEN

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: whatsapp-data-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: whatsapp-logs-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whatsapp-rag-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - whatsapp-rag.yourdomain.com
    secretName: whatsapp-rag-tls
  rules:
  - host: whatsapp-rag.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: whatsapp-rag-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: whatsapp-rag-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: whatsapp-rag
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60